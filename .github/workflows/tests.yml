# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
name: Build and Run Apigee Migration Assessment Image

on:  # yamllint disable-line rule:truthy
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  pull_request_target:
    paths-ignore:
      - '**.md'
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened
  workflow_dispatch:

permissions: read-all

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ghcr.io/${{ github.repository }}/apigee-migration-assessment-tool

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image_tag: ${{ steps.get_tag.outputs.tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch
            type=ref,event=pr
            type=sha

      - name: Determine primary image tag
        id: get_tag
        run: |
          if [[ "${{ github.event_name }}" == "pull_request_target" ]]; then
            echo "tag=pr-${{ github.event.number }}" >> "$GITHUB_OUTPUT"
          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "tag=latest" >> "$GITHUB_OUTPUT"
          else
            # For feature branches, etc.
            echo "tag=${{ github.ref_name }}" | sed 's/\//-/g' >> "$GITHUB_OUTPUT"
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  test-opdk:
    runs-on: ubuntu-latest
    needs:
      - build-and-push
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - id: 'auth'
        uses: 'google-github-actions/auth@v3'
        with:
          token_format: 'access_token'
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_POOL_PROVIDER_NAME }}
          service_account: ${{ secrets.SVC_ACCOUNT_EMAIL }}
          export_environment_variables: false

      - name: Fetch input.properties
        run: |
            echo "${{ secrets.OPDK_INPUT_PROPERTIES }}" | base64 -d > "${{ github.workspace }}/input.properties"

      - name: Run Docker container
        run: |
          docker run \
            -v "${{ github.workspace }}/input.properties:/app/input.properties" \
            -e "SOURCE_AUTH_TOKEN=${{ secrets.APIGEE_OPDK_TOKEN }}" \
            -e "APIGEE_ACCESS_TOKEN=${{ steps.auth.outputs.access_token }}" \
            "${{ env.IMAGE_NAME }}:${{ needs.build-and-push.outputs.image_tag }}" \
            --resources all
